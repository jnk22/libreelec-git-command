#!/usr/bin/env bash
#
# Wrapper script for git commands to run inside the Docker container.

readonly container_name=${CONTAINER_NAME:-"git-command"}

# The user might have a custom alias or uses some other docker binary which
# we do not want to override.
if ! command -v docker &>/dev/null; then
  docker_bin="$HOME/kodi/addons/service.system.docker/bin/docker"
else
  docker_bin="docker"
fi

if [ -S "$SSH_AUTH_SOCK" ]; then
  ssh_agent_mount="--volume $SSH_AUTH_SOCK:$SSH_AUTH_SOCK --env SSH_AUTH_SOCK=$SSH_AUTH_SOCK"
else
  ssh_agent_mount=""
fi

args=()
host_path=$PWD

for arg in "$@"; do
  if [[ "$arg" == /* ]]; then
    args+=("/git$arg")
    host_path=/
  else
    args+=("$arg")
  fi
done

# We also pass the user id and group id to the container to ensure that the user
# has the same permissions inside the container as outside.
"$docker_bin" run --rm -it \
  --user "$(id -u):$(id -g)" \
  --volume "$HOME":/root \
  --volume "$host_path":/git \
  --workdir /git \
  "${ssh_agent_mount[@]}" \
  "$container_name" \
  "${args[@]}"
